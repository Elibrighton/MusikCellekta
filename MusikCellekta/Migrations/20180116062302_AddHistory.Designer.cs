// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using MusikCellekta.Data;
using System;

namespace MusikCellekta.Migrations
{
    [DbContext(typeof(CellektaContext))]
    [Migration("20180116062302_AddHistory")]
    partial class AddHistory
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.0-rtm-26452")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MusikCellekta.Models.History", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Created");

                    b.Property<int>("SongID");

                    b.HasKey("ID");

                    b.HasIndex("SongID");

                    b.ToTable("History");
                });

            modelBuilder.Entity("MusikCellekta.Models.Song", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Artist");

                    b.Property<int>("Bpm");

                    b.Property<string>("Disc");

                    b.Property<string>("Genre");

                    b.Property<int>("Intensity");

                    b.Property<string>("Key");

                    b.Property<string>("Title");

                    b.Property<int>("Track");

                    b.Property<int>("Year");

                    b.HasKey("ID");

                    b.ToTable("Song");
                });

            modelBuilder.Entity("MusikCellekta.Models.History", b =>
                {
                    b.HasOne("MusikCellekta.Models.Song", "Song")
                        .WithMany("History")
                        .HasForeignKey("SongID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
